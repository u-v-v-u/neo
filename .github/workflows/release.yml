name: Release executables

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build-windows:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
    - uses: actions/checkout@v4
    - name: Put back the git branch into git (Earthly uses it for tagging)
      run: |
        branch=""
        if [ -n "$GITHUB_HEAD_REF" ]; then
          branch="$GITHUB_HEAD_REF"
        else
          branch="${GITHUB_REF##*/}"
        fi
        git checkout -b "$branch" || true
    - name: Download latest earthly
      run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.6.21/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
    - name: Earthly version
      run: earthly --version
    - name: Run build
      run: earthly +build-windows --use-inline-cache --save-inline-cache
    - uses: actions/upload-artifact@v4
      with:
        name: x86_64-pc-windows-gnu
        path: ${{ github.workspace }}/release/
        if-no-files-found: error
        retention-days: 7
  build-linux:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
    - uses: actions/checkout@v4
    - name: Put back the git branch into git (Earthly uses it for tagging)
      run: |
        branch=""
        if [ -n "$GITHUB_HEAD_REF" ]; then
          branch="$GITHUB_HEAD_REF"
        else
          branch="${GITHUB_REF##*/}"
        fi
        git checkout -b "$branch" || true
    - name: Download latest earthly
      run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.6.21/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
    - name: Earthly version
      run: earthly --version
    - name: Run build
      run: earthly +build-linux --use-inline-cache --save-inline-cache
    - uses: actions/upload-artifact@v4
      with:
        name: x86_64-unknown-linux-gnu
        path: ${{ github.workspace }}/release
        if-no-files-found: error
        retention-days: 7
  upload:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -v --latest --strip header
      - uses: actions/download-artifact@v5
        with:
          path: release/
      - name: Publish
        run: |
          VERSION="$(cargo pkgid | cut -d# -f2 | cut -d: -f2)"
          if hub release show "$VERSION" &> /dev/null; then
            echo "Release $VERSION already exists."
            exit
          fi
          mv release/x86_64-unknown-linux-gnu/template release/x86_64-unknown-linux-gnu/x86_64-unknown-linux-musl
          mv release/x86_64-pc-windows-gnu/template.exe release/x86_64-pc-windows-gnu/x86_64-pc-windows-gnu.exe
          hub release create --commitish '${{ github.sha }}' \
            --message "$VERSION" \
            --attach release/x86_64-pc-windows-gnu/x86_64-pc-windows-gnu.exe \
            --attach release/x86_64-unknown-linux-gnu/x86_64-unknown-linux-musl \
            '${{ steps.git-cliff.outputs.changelog }}'